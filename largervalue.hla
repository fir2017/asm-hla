program LARGEVALUE;
#include("stdlib.hhf");

procedure findLargest(baseAddr: dword; arraySize: uns32; dataType: uns32);
begin findLargest;
    
    pushad();

    mov(baseAddr, eax);
    
    for( mov(0, ecx); ecx < 9; inc(ecx) ) do
        
        mov( [eax+ecx], ebx );
        mov( arraySize, edx);
        mov( [eax+edx], edx );

        cmp(ebx, edx);
        jng NOT_GREATER;
            
            mov( arraySize, edx);
            mov( bl, [eax+edx] );
            stdout.put( "[eax + arraySize]: ", (type int8 [eax+edx]), nl );
            
        NOT_GREATER:

    endfor;
    
    mov( arraySize, edx);
    add(1, edx);
    stdout.put( "Largest Value: ", (type int8 [eax+edx]), nl );

    popad();

end findLargest;

begin LARGEVALUE;

mem.zalloc(11);

mov(5, cl);
mov(cl, [eax+0]);
mov(10, cl);
mov(cl, [eax+1]);
mov(2, cl);
mov(cl, [eax+2]);
mov(16, cl);
mov(cl, [eax+3]);
mov(4, cl);
mov(cl, [eax+4]);

findLargest(eax, 10, 1);
end LARGEVALUE;
